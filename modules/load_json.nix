
########################################################################
#                                                                      #
# DO NOT EDIT THIS FILE, ALL EDITS SHOULD BE DONE IN THE GIT REPO,     #
# PUSHED TO GITHUB AND PULLED HERE.                                    #
#                                                                      #
# LOCAL EDITS WILL BE OVERWRITTEN.                                     #
#                                                                      #
########################################################################

{ config, lib, ...}:

let
  cfg = config.settings.boot;
in

with lib;
with (import ../msf_lib.nix { inherit lib; });

{
  config = {
    settings.users.users = let
      host_name        = config.settings.network.host_name;
      tunnel_only_path = ../org-spec/json/tunnel_only.json;
      host_users_path  = ../org-spec/json + "/${host_name}/users.json";

      # Load a JSON property from the given JSON file, the property should contain a list
      # which will be converted to an attribute set with every value set to a given constant
      # A JSON list like
      #   { "enable": [ "foo", "bar" ] }
      # will be transformed into an attribute set, e.g.
      #   { foo = const; bar = const; }
      load_json_const = json_path: json_property: value: mkIf (builtins.pathExists json_path) (
        listToAttrs (map (user: nameValuePair user value)
                         (builtins.fromJSON (builtins.readFile json_path))."${json_property}")
      );
    in
      # recursiveUpdate merges the two resulting attribute sets recursively
      recursiveUpdate (load_json_const tunnel_only_path "tunnel_only" msf_lib.user_roles.tunnelOnly)
                      (load_json_const host_users_path  "enable"      { enable = true; });
  };
}

