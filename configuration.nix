
########################################################################
#                                                                      #
# DO NOT EDIT THIS FILE, ALL EDITS SHOULD BE DONE IN THE GIT REPO,     #
# PUSHED TO GITHUB AND PULLED HERE.                                    #
#                                                                      #
# LOCAL EDITS WILL BE OVERWRITTEN.                                     #
#                                                                      #
########################################################################

# Edit this configuration file to define what should be installed on
# your system.  Help is available in the configuration.nix(5) man page
# and in the NixOS manual (accessible by running ‘nixos-help’).

{ config, lib, ... }:

with lib;

{

  imports = [
    ./hardware-configuration.nix
    ./settings.nix
    ./modules/auto_shutdown.nix
    ./modules/boot.nix
    ./modules/crypto.nix
    ./modules/docker.nix
    ./modules/global_settings.nix
    ./modules/maintenance.nix
    ./modules/ocb_users.nix
    ./modules/packages.nix
    ./modules/prometheus.nix
    ./modules/reverse-tunnel.nix
    ./modules/sshd.nix
    ./modules/system.nix
    ./modules/users.nix
    ./modules/virtualbox.nix
    ./modules/vmware.nix
  ];

  # We need to force to override the definition in the default AWS config.
  fileSystems = mkForce {
    "/" = {
      device  = "/dev/disk/by-label/nixos_root";
      fsType  = "ext4";
      options = [ "defaults" "noatime" "acl" ];
      autoResize = true;
    };
    "/boot" = mkIf config.settings.boot.separate_partition {
      device  = "/dev/disk/by-label/nixos_boot";
      fsType  = "ext4";
      options = [ "defaults" "noatime" "nosuid" "nodev" "noexec" ];
      autoResize = true;
    };
    "/boot/efi" = mkIf (config.settings.boot.mode == "uefi") {
      device = "/dev/disk/by-label/EFI";
      fsType = "vfat";
    };
  };

  networking = {
    # All non-manually configured interfaces are configured by DHCP.
    useDHCP = true;
    dhcpcd = {
      persistent = true;
      # See: https://wiki.archlinux.org/index.php/Dhcpcd#dhcpcd_and_systemd_network_interfaces
      denyInterfaces = [ "eth*" "wlan*" ];
    };
  };

  # This value determines the NixOS release with which your system is to be
  # compatible, in order to avoid breaking some software such as database
  # servers. You should change this only after NixOS release notes say you
  # should.
  system.stateVersion = "18.03"; # Did you read the comment?
}

