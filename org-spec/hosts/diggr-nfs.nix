########################################################################
#                                                                      #
# DO NOT EDIT THIS FILE, ALL EDITS SHOULD BE DONE IN THE GIT REPO,     #
# PUSHED TO GITHUB AND PULLED HERE.                                    #
#                                                                      #
# LOCAL EDITS WILL BE OVERWRITTEN.                                     #
#                                                                      #
########################################################################

{ lib, ... }:

with lib;

let
  statdPort  = 4000;
  lockdPort  = 4001;
  mountdPort = 4002;

  mkNfsCryptoMount = name: device: {
    enable             = true;
    device             = "/dev/mapper/${device}";
    mount_point        = "/exports/${name}";
    mount_options      = "acl,noatime,nosuid,nodev";
    dependent_services = [ "nfs-server.service" ];
  };

in {
  time.timeZone = "Europe/Brussels";

  settings = {
    boot.mode = "uefi";
    reverse_tunnel.enable = true;
    crypto.mounts = mapAttrs mkNfsCryptoMount {
      esdata      = "LVM_FCdata3_VG-esdata";
      esproxy     = "LVM_FCdata1_VG-esproxy";
      esbackup    = "LVM_NLdata1_VG-esbackup";
      diggr_other = "LVM_FCdata2_VG-diggr_other";
    };
    vmware = {
      enable = true;
      inDMZ = true;
    };
    network = {
      host_name = "diggr-nfs";
      static_ifaces.ens192 = {
        address = "192.168.50.244";
        prefix_length = 24;
        gateway = "192.168.50.1";
        fallback = false;
      };
    };
  };

  services.nfs.server = {
    enable = true;
    exports = ''
      /exports/esdata      docker-dmz-11.local(rw,nohide,insecure,no_subtree_check)
      /exports/esproxy     docker-dmz-11.local(rw,nohide,insecure,no_subtree_check)
      /exports/esbackup    docker-dmz-11.local(rw,nohide,insecure,no_subtree_check)
      /exports/diggr_other docker-dmz-11.local(rw,nohide,insecure,no_subtree_check)
    '';
    inherit statdPort lockdPort mountdPort;
  };
  networking.firewall = let
    ports = [ 111 2049 statdPort lockdPort mountdPort ];
  in {
    allowedTCPPorts = ports;
    allowedUDPPorts = ports;
  };
}

