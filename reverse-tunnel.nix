
########################################################################
#                                                                      #
# DO NOT EDIT THIS FILE, ALL EDITS SHOULD BE DONE IN A GIT REPO,       #
# PUSHED TO GITHUB AND MERGED HERE.                                    #
#                                                                      #
# LOCAL EDITS WILL BE OVERWRITTEN.                                     #
#                                                                      #
########################################################################

{ config, pkgs, ... }:

{
  environment.systemPackages = with pkgs; [
    autossh
    procps
  ];
  
  users.extraUsers.tunnel = {
    isNormalUser = false;
    createHome = true;
    home = "/var/tunnel";
  };

  systemd.services.autossh-reverse-tunnel = {
    enable = true;
    description = "AutoSSH reverse tunnel service to ensure resilient ssh access";
    after = [ "NetworkManager-wait-online.service"
              "network.target"
              "network-online.target"
              "dbus.service"
    ];
    wantedBy = [ "multi-user.target" ];
    wants = [ "NetworkManager-wait-online.service" "network-online.target" ];
    environment = {
      AUTOSSH_GATETIME = "0";
      AUTOSSH_PORT = "0";
    };
    serviceConfig = {
      User = "tunnel";
      Restart = "always";
      RestartSec = 10;
      ExecStart = let
        settings = import ./settings.nix;
        hostname = settings.hostname;
        remote_host = settings.reverse_tunnel_host;
        remote_forward_port = settings.reverse_tunnel_forward_port;
      in ''${pkgs.autossh}/bin/autossh \
             -q -N \
             -o "ExitOnForwardFailure=yes" \
             -o "ServerAliveInterval=60" \
             -o "ServerAliveCountMax=3" \
             -o "ConnectTimeout=30" \
             -o "StrictHostKeyChecking=no" \
             -o "IdentitiesOnly=yes" \
             -o "Compression=yes" \
             -o "ControlMaster=no" \
             -R ${remote_forward_port}:localhost:22 \
             -i /var/tunnel/id_${hostname} \
             tunnel@${remote_host}
         '';
      ExecStop = "${pkgs.procps}/bin/pkill autossh";
    };
  };  

}

